package task;


import static java.lang.Thread.sleep;

public class Main {

    public static void main(String[] args) {
        /**
         * 1. Создать поток, который будет в цикле итерироваться от 1 до 10 000 000 и суммировать каждый четный элемент кратный 3.
         * На каждой итерации, кратной 1 000 000, поток должен заснуть на 10мс.
         * Вместе с суммирующим потоком запустить поток демон, который каждую пятую миллисекунду
         * выводит в консоль текущее значение просуммированных элементов.
         */
        task1();
        /**
         * 2. Безумный учёный каждую ночь на протяжении 50 суток отправляет своего прислужника на свалку фабрики роботов за деталями.
         * Чтобы собрать одного робота нужно:
         * Голова, Тело, Левая рука, Правая рука, Левая нога, Правая нога, CPU, RAM, HDD
         * В первую ночь на свалке находится 20 случайных деталей. Каждую последующую ночь фабрика выбрасывает на свалку от 1 до 4 случайных деталей.
         * В то же самое время прислужник отправляются на свалку и собирает от 1 до 4 случайных деталей.
         * Если на свалке деталей нет – прислужник уходит ни с чем.
         * Затем он возвращаются домой и отдаёт детали хозяину.
         * Учёный пытается собрать робота из деталей, которые есть в наличии.
         * Написать программу, симулирующую этот процесс. Для симуляции принять, что каждая ночь наступает через 100мс.
         * Фабрика и прислужник действуют в одно и то же время.
         * После 50 ночей (около 5 секунд) определить количество собранных роботов.
         */
        //task2();
    }
    public static void task1() {
        MyThread thread = new MyThread();
        MyDaemon daemon = new MyDaemon();
        daemon.setDaemon(true);
        thread.start();
        daemon.start();
    }
    public static class MyDaemon extends Thread {
            public void run() {
            System.out.println("Запущен поток " + getName());
            while (true) {
                try {
                    sleep(5);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                System.out.printf(getName() + " сумма- %,18d\n", MyThread.sum);
            }
        }
    }

    public static class MyThread extends Thread {
        private static long sum = 0;
        public void run() {
            System.out.println("Запущен поток " + getName());
            for (int i = 1; i < 10000000; i++) {
                if (i % 2 == 0 && i % 3 == 0) {
                    sum += i;
                }
                if (i % 1000000 == 0) {
                    try {
                        sleep(10);
                    } catch (InterruptedException e) {
                        System.out.println(e);
                    }
                }
            } System.out.printf(getName() + " сумма: %,25d\n", sum);
        }
    }
    /**Чтобы собрать одного робота нужно:
    Голова, Тело, Левая рука, Правая рука, Левая нога, Правая нога, CPU, RAM, HDD*/
    public enum RobotDetal {
        HEAD, BODY, LEFT_HAND, RIGHT_HAND, LEFT_LEG, RIGHT_LEG, CPU, RAM, HDD
    }

}


/**Многопоточность.

        1.	Создать поток, который будет в цикле итерироваться от 1 до 10 000 000 и суммировать каждый четный элемент кратный 3. На каждой итерации, кратной 1 000 000, поток должен заснуть на 10мс. Вместе с суммирующим потоком запустить поток демон, который каждую пятую миллисекунду выводит в консоль текущее значение просуммированных элементов.

        2. Безумный учёный каждую ночь на протяжении 50 суток отправляет своего прислужника на свалку фабрики роботов за деталями.
        Чтобы собрать одного робота нужно:
        Голова, Тело, Левая рука, Правая рука, Левая нога, Правая нога, CPU, RAM, HDD
        В первую ночь фабрика выбрасывает 20 случайных деталей на свалке. Каждую последующую ночь фабрика выбрасывает на свалку от 1 до 4 случайных деталей.
        В то же самое время прислужник отправляются на свалку и  собирает от 1 до 4 случайных деталей. Если на свалке деталей нет – прислужник уходит ни с чем.
        Затем он возвращаются домой и отдаёт детали хозяину.
        Учёный пытается собрать робота из деталей, которые есть в наличии.
        Написать программу, симулирующую этот процесс. Для симуляции принять, что каждая ночь наступает через 100мс.
        Фабрика и прислужник действуют в одно и то же время.
        После 50 ночей (около 5 секунд) определить количество собранных роботов.*/

